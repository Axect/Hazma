# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2

jobs:
  linux-test-and-wheels:
    working_directory: ~/linux-wheels
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
        name: install dependencies
        command: |
          pip install -r requirements.txt
          pip install --upgrade .
      - save_cache:
        paths: ./venv
        key: v1-dependencies-{{ checksum "requirements.txt" }}
      # run tests!
      - run:
        name: run tests
        command: |
          py.test ./hazma/test/
      # Build Linux wheels
      - run:
        name: Build the Linux wheeels
        command: |
          pip install --user cibuildwheel
          cibuildwheel --output-dir wheelhouse
      - store_artifacts:
        path: wheelhouse/

#   osx-test-and-wheels:
#     working_directory: ~/osx-wheels
#     # Get xcode
#     macos:
#      xcode: "10.0.0"
#    steps:
#      - checkout
#      - restore_cache:
#        keys:
#          - v1-dependencies-{{ checksum "requirements.txt" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-
#      # Install depndencies from requirements.txt
#      - run:
#        name: install dependencies
#        command: |
#          pip install -r requirements.txt
#          pip install --upgrade .
#      - save_cache:
#        paths:
#          - ./venv
#        key: v1-dependencies-{{ checksum "requirements.txt" }}
#      # run tests!
#      - run:
#        name: run tests
#        command: |
#          py.test ./hazma/test/
#      # Build OS X wheels
#      - run:
#        name: Build the OS X wheels
#        command: |
#          pip install --user cibuildwheel
#          cibuildwheel --output-dir wheelhouse
#      - store_artifacts:
#        path: wheelhouse/

workflows:
  version: 2
  all-tests:
    jobs:
      - linux-test-and-wheels
#      - osx-test-and-wheels
